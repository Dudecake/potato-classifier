cmake_minimum_required(VERSION 3.5)

project(potato-classifier)

set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTOUIC ON)
#set(CMAKE_AUTORCC ON)
set(CMAKE_INCLUDE_CURRENT_DIR ON)
include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-march=native" COMPILER_OPT_ARCH_NATIVE_SUPPORTED)
if (COMPILER_OPT_ARCH_NATIVE_SUPPORTED)
    set(CXXFLAGS "-march=native")
endif()

if(EXISTS /usr/local/include/ddsl/ddsl.hpp)
    message("-- Found ddsl in /usr/local/include/ddsl")
    include_directories(SYSTEM "/usr/local/include/ddsl" "/usr/local/include/ddsl/libsvm")
elseif(EXISTS /usr/include/ddsl/ddsl.hpp)
    message("-- Found ddsl in /usr/include/ddsl")
    include_directories(SYSTEM "/usr/include/ddsl" "/usr/local/ddsl/libsvm")
else()
    #ERROR
endif()
if(EXISTS /usr/local/include/caffe/caffe.hpp)
    include_directories(SYSTEM "/usr/local/include/caffe")
elseif(EXISTS /usr/include/caffe/caffe.hpp)
    include_directories(SYSTEM "/usr/include/caffe")
else()
    #ERROR
endif()

if(CPU_ONLY)
    message("-- Building without GPU support")
    add_definitions(-DCPU_ONLY=ON)
endif()
if(USE_NCCL)
    message("-- Building with multiple GPU support")
    add_definitions(-DUSE_NCCL=ON)
endif()

find_package(Qt5 COMPONENTS Core Widgets REQUIRED)
find_package(Caffe REQUIRED)

set(SRC "main.cpp" "mainwindow.cpp" "mainwindow.ui")
set(HEADERS "mainwindow.h")
add_executable(${PROJECT_NAME} ${SRC} ${HEADERS})

set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 14)
set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD_REQUIRED ON)
include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-march=native" COMPILER_OPT_ARCH_NATIVE_SUPPORTED)
if (COMPILER_OPT_ARCH_NATIVE_SUPPORTED)
    set(CMAKE_CXX_FLAGS "-march=native -pipe -fstack-protector-strong -Wall -Wpedantic -Werror")
endif()
set(EXTERNAL_LIBS png)
set(DDSL_LIBS af_ddsl png_ddsl svm_ddsl)
find_library(LOG4CXX_LIBRARIES log4cxx)
target_link_libraries(${PROJECT_NAME} Qt5::Core Qt5::Widgets ${DDSL_LIBS} ${EXTERNAL_LIBS} ${LOG4CXX_LIBRARIES} ${Caffe_LIBRARIES})
qt5_use_modules(${PROJECT_NAME} Widgets)
